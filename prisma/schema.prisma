generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Make {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  popular  Boolean   @default(false)
  models   Model[]
  vehicles Vehicle[]
}

model Model {
  id       Int       @id @default(autoincrement())
  name     String
  makeId   Int
  popular  Boolean   @default(false)
  make     Make      @relation(fields: [makeId], references: [id])
  vehicles Vehicle[]

  @@unique([name, makeId])
}

model Vehicle {
  id               Int      @id @default(autoincrement())
  vin_number       String   @unique
  model_year       Int
  trim             String?
  
  // Pricing
  listed_price     Float    
  expected_price   Float?  
  
  // status
  status           String?  // e.g., OPEN, SOLD
  
  // Basic vehicle details
  odometer         Int
  body_type        String?
  doors            Int?
  drive_type       String?  // Front-Wheel Drive, AWD, etc.
  transmission     String?  // Automatic, Manual, CVT
  engine           String?  // e.g. "2.5L I4 Hybrid"
  horse_power      Int?
  
  // Fuel & battery
  fuel_type        String?
  fuel_capacity    Float?   // liters
  city_fuel        Float?   // L/100km
  hwy_fuel         Float?   // L/100km
  combined_fuel    Float?   // L/100km
  battery_capacity String?  // for EV/Hybrid, e.g. "1 kWh"
  
  // Colors
  exterior_color   String?
  interior_color   String?
  
  // Measurements
  front_legroom    Float?   // mm
  back_legroom     Float?   // mm
  cargo_volume     Float?   // liters
  // Features
  safety_features         String[]
  options          String[]
  // Misc metadata
  comment          String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  
  // Relations
  makeId           Int
  modelId          Int
  make             Make     @relation(fields: [makeId], references: [id])
  model            Model    @relation(fields: [modelId], references: [id])
  images           VehicleImage[]
}

model VehicleImage {
  id        Int     @id @default(autoincrement())
  url       String  // Cloudinary secure URL
  key       String  
  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}
