generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Make {
  id       Int       @id @default(autoincrement())
  name     String    @unique
  popular  Boolean   @default(false)
  models   Model[]
  vehicles Vehicle[]
}

model Model {
  id       Int       @id @default(autoincrement())
  name     String
  makeId   Int
  popular  Boolean   @default(false)
  make     Make      @relation(fields: [makeId], references: [id])
  vehicles Vehicle[]

  @@unique([name, makeId])
}

model Vehicle {
  id               Int      @id @default(autoincrement())
  vin_number       String   @unique
  model_year       Int
  trim             String?
  description      String?
  
  // Pricing
  listed_price     Float    
  discounted_price   Float  
  
  // status
  status           vehicleStatus?  // e.g., OPEN, SOLD
  
  // Basic vehicle details
  odometer         Int
  body_type        bodyType?
  doors            Int?
  drive_type       driveType?  // Front-Wheel Drive, AWD, etc.
  transmission     transmissions?  // Automatic, Manual, CVT
  engine           String?  // e.g. "2.5L I4 Hybrid"
  horse_power      Int?
  
  // Fuel & battery
  fuel_type        fuelType?
  fuel_capacity    Float?   // liters
  city_fuel        Float?   // L/100km
  hwy_fuel         Float?   // L/100km
  combined_fuel    Float?   // L/100km
  battery_capacity String?  // for EV/Hybrid, e.g. "1 kWh"
  
  // Colors
  exterior_color   String?
  interior_color   String?
  
  // Measurements
  front_legroom    Float?   // mm
  back_legroom     Float?   // mm
  cargo_volume     Float?   // liters
  // Features
  features         String[]
  // Misc metadata
  carfax           String?
  comment          String?
  created_at       DateTime @default(now())
  updated_at       DateTime @updatedAt
  
  // Relations
  makeId           Int
  modelId          Int
  make             Make     @relation(fields: [makeId], references: [id])
  model            Model    @relation(fields: [modelId], references: [id])
  images           VehicleImage[]
  availabilityForms vehicleAvailabilityForm[]
  financingForms financingForm[]
}

model VehicleImage {
  id        Int     @id @default(autoincrement())
  url       String  
  key       String  
  vehicleId Int
  vehicle   Vehicle @relation(fields: [vehicleId], references: [id])
}

//forms

model vehicleAvailabilityForm {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  email String
  phone String
  lead_status leadStatus@default(NEW)
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model tradeAppraisalForm {
  id        Int      @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  phone     String
  lead_status leadStatus@default(NEW)
  // Vehicle info
  make      String
  model     String
  year      Int?
  trim      String?
  odometer  Int?
  bodyType  String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model financingForm {
  id                   Int      @id @default(autoincrement())
  
  // Personal Information
  salutation           String?
  gender               String?
  firstName            String
  lastName             String
  phone                String
  email                String
  maritalStatus        String
  birthDate            DateTime
  sin                  String?

  // Current Address
  currentAddress       String
  currentCity          String
  currentProvince      String
  currentPostalCode    String
  currentDurationYear  Int
  currentDurationMonth Int
  homeStatus           String
  monthlyPayment       Float?

  // Previous Address (optional if lived <2 years)
  prevAddress          String?
  prevCity             String?
  prevProvince         String?
  prevPostalCode       String?
  prevDurationYear     Int?
  prevDurationMonth    Int?

  // Current Employment
  employmentType        String
  employer             String
  occupation           String
  employmentAddress    String
  employmentCity       String
  employmentProvince   String
  employmentPostalCode String
  employmentPhone      String?
  employmentDurationYear Int
  employmentDurationMonth Int
  grossIncome          Float

  // Previous Employment (optional if duration <2 years)
  prevEmployer         String?
  prevEmploymentPhone  String?
  prevEmploymentDurationYear Int?
  prevEmploymentDurationMonth Int?

  // Other Information
  bankruptcy           String?
  repossession         String?
  coSignerAvailable    String?
  creditRating         String?

  // Metadata
  lead_status leadStatus@default(NEW)
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId Int
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}


//enums
enum leadStatus {
  NEW
  CONTACTED
  LOST
  CONVERTED
}
enum vehicleStatus {
  AVAILABLE
  RESERVED
  SOLD
  PENDING
  UNAVAILABLE
}

enum bodyType {
  CONVERTIBLE
  COUPE
  HATCHBACK
  MINIVAN
  SEDAN
  SUV
  TRUCK
  WAGON
}

enum driveType {
  FWD
  RWD
  AWD
  FOURWD
}

enum transmissions {
  AUTOMATIC
  MANUAL
}

enum fuelType {
  PETROL
  DIESEL
  ELECTRIC
}

